(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>d});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,"html, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#container {\n  border: 2px solid black;\n  width: 75vw;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.project {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.toDoHead {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 3%;\n}\n\n.projectHead {\n  display: flex;\n  justify-content: center;\n}\n\n#headingText {\n  margin-left: 5%;\n}\n\n#backBtn {\n}\n\n.listObject {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.listObject > * {\n  max-width: 7%;\n}\n\n.listObject > button {\n  flex-grow: 2;\n}\n\n#container > :not(:first-child) {\n  margin-top: 1%;\n}\n\n.modal {\n  position: absolute;\n  background-color: white;\n  top: 20%;\n  border: 1px solid #ddd;\n  z-index: 2;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  backdrop-filter: blur(3px);\n  z-index: 1;\n}\n\n.modalHead {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,QAAQ;EACR,sBAAsB;EACtB,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,aAAa;EACb,2BAA2B;EAC3B,0BAA0B;EAC1B,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB",sourcesContent:["html, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#container {\n  border: 2px solid black;\n  width: 75vw;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.project {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.toDoHead {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 3%;\n}\n\n.projectHead {\n  display: flex;\n  justify-content: center;\n}\n\n#headingText {\n  margin-left: 5%;\n}\n\n#backBtn {\n}\n\n.listObject {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.listObject > * {\n  max-width: 7%;\n}\n\n.listObject > button {\n  flex-grow: 2;\n}\n\n#container > :not(:first-child) {\n  margin-top: 1%;\n}\n\n.modal {\n  position: absolute;\n  background-color: white;\n  top: 20%;\n  border: 1px solid #ddd;\n  z-index: 2;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  backdrop-filter: blur(3px);\n  z-index: 1;\n}\n\n.modalHead {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}"],sourceRoot:""}]);const d=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=r[s]||0,A="".concat(s," ").concat(l);r[s]=l+1;var u=n(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=i(p,o);o.byIndex=d,t.splice(d,0,{identifier:A,updater:m,references:1})}a.push(A)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var d=n(r[a]);t[d].references--}for(var c=o(e,i),s=0;s<r.length;s++){var l=n(r[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{function e(e,t,n,o,i){return{title:e,description:t,dueDate:n,priority:o,notes:i}}var t=n(379),o=n.n(t),i=n(795),r=n.n(i),a=n(569),d=n.n(a),c=n(565),s=n.n(c),l=n(216),A=n.n(l),u=n(589),p=n.n(u),m=n(426),f={};function h(e){const t=document.getElementById("container");for(t.setAttribute("data-list",e.title);t.firstChild;)t.removeChild(t.firstChild);const n=document.createElement("div");n.classList.add("toDoHead");const o=document.createElement("button");o.innerText="back to Projects",o.setAttribute("id","backBtn"),n.appendChild(o);const i=document.createElement("h2");i.innerText=`Project: ${e.title}`,i.setAttribute("id","headingText"),n.appendChild(i),t.appendChild(n),e.list.forEach((e=>{const n=document.createElement("div");n.classList.add("listObject"),n.setAttribute("data-todo",e.title);const o=document.createElement("h3");o.innerText=`To-Do: ${e.title}`,n.appendChild(o);const i=document.createElement("p");i.innerText=`Description: ${e.description}`,n.appendChild(i);const r=document.createElement("p");r.innerText=`Due date: ${e.dueDate}`,n.appendChild(r);const a=document.createElement("p");a.innerText=`Priority: ${e.priority}`,n.appendChild(a);const d=document.createElement("p");d.innerText=`Notes: ${e.dueDate}`,n.appendChild(d);const c=document.createElement("button");c.setAttribute("id","editBtn"),c.innerText="Edit",n.appendChild(c);const s=document.createElement("button");s.innerText="Delete",s.setAttribute("id","deleteToDoBtn"),n.appendChild(s),t.appendChild(n)}))}function E(e){const t=document.getElementById("container");for(t.removeAttribute("data-list");t.firstChild;)t.removeChild(t.firstChild);const n=document.createElement("div");n.classList.add("projectHead");const o=document.createElement("h2");o.innerText="Project List",n.appendChild(o),t.appendChild(n),e.projectStorage.forEach((e=>{const n=document.createElement("div");n.classList.add("project"),n.setAttribute("data-title",e.title);const o=document.createElement("h3");o.innerText=e.title,n.appendChild(o);const i=document.createElement("button");i.setAttribute("id","expand"),i.innerText="View Project",n.appendChild(i);const r=document.createElement("button");r.setAttribute("id","deleteProjectBtn"),r.innerText="Delete Project",n.appendChild(r),t.appendChild(n)}))}f.styleTagTransform=p(),f.setAttributes=s(),f.insert=d().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=A(),o()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const C=document.createElement("section");C.classList.add("modal","hidden");const b=document.createElement("div");b.classList.add("overlay","hidden");const g=e("wash dishes","wash the darn dishes","today","high","you can use the dishwasher"),v=e("eat protein","gotta get 100g of protein","today","high","protein from foods preferred"),x=function(e){const t=[];return{title:"mylist",list:t,addToDo:function(e){t.push(e),e.index=t.length-1},deleteToDo:function(e){t.splice(function(e){return t.findIndex((t=>t.title===e))}(e),1)},editToDo:function(e){t.splice(e.index,1,e)}}}();x.addToDo(g),x.addToDo(v);const y=function(){const e=[];function t(t){return e.findIndex((e=>e.title===t))}return{projectStorage:e,addList:function(t){e.push(t)},deleteList:function(n){e.splice(t(n),1)},getListIndex:t}}();y.addList(x),E(y);const B=document.getElementById("container");B.addEventListener("click",(e=>{if("BUTTON"===!e.target.tagName)return;const t=e.target;if("project"===t.parentNode.className){const e=t.parentNode.getAttribute("data-title");if(-1===y.getListIndex(e))return;"expand"===t.id?h(y.projectStorage[y.getListIndex(e)]):"deleteProjectBtn"===t.id&&window.confirm("Do you real want to delete this project?")&&(y.deleteList(e),E(y))}else if("backBtn"===t.id)E(y);else if("editBtn"===t.id)(function(e){const t=document.createElement("div");t.classList.add("modalHead");const n=document.createElement("h2");n.innerText="Edit To-Do";const o=document.createElement("button");o.innerHTML="X",o.setAttribute("id","closeModal"),o.addEventListener("click",(e=>{console.log(e.target.id),"closeModal"===e.target.id&&(t.removeChild(n),t.removeChild(o),i.removeChild(r),document.querySelector("body").removeChild(C),document.querySelector("body").removeChild(b))})),t.appendChild(n),t.appendChild(o);const i=document.createElement("div"),r=document.createElement("p");r.innerText="This is a test",i.appendChild(r),C.appendChild(t),C.appendChild(i),document.querySelector("body").appendChild(C),document.querySelector("body").appendChild(b)})(),console.log("it works");else if("deleteToDoBtn"===t.id&&window.confirm("Do you real want to delete this To-Do?")){const e=t.parentNode.getAttribute("data-todo");console.log(e),console.log(B.getAttribute("data-list"));const n=B.getAttribute("data-list"),o=y.projectStorage[y.getListIndex(n)];console.log(o),o.deleteToDo(e),h(y.projectStorage[y.getListIndex(n)])}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,