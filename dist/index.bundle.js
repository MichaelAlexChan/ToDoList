(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),i=n.n(o),r=n(645),a=n.n(r)()(i());a.push([e.id,"html, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#container {\n  border: 2px solid black;\n  width: 75vw;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.project {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.toDoHead {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 3%;\n}\n\n.projectHead {\n  display: flex;\n  justify-content: center;\n}\n\n#headingText {\n  margin-left: 5%;\n}\n\n#backBtn {\n}\n\n.listObject {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.listObject > * {\n  max-width: 7%;\n}\n\n.listObject > button {\n  flex-grow: 2;\n}\n\n#container > :not(:first-child) {\n  margin-top: 1%;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;AAChB",sourcesContent:["html, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#container {\n  border: 2px solid black;\n  width: 75vw;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.project {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.toDoHead {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 3%;\n}\n\n.projectHead {\n  display: flex;\n  justify-content: center;\n}\n\n#headingText {\n  margin-left: 5%;\n}\n\n#backBtn {\n}\n\n.listObject {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.listObject > * {\n  max-width: 7%;\n}\n\n.listObject > button {\n  flex-grow: 2;\n}\n\n#container > :not(:first-child) {\n  margin-top: 1%;\n}\n"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,r){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var r={},a=[],c=0;c<e.length;c++){var d=e[c],s=o.base?d[0]+o.base:d[0],l=r[s]||0,u="".concat(s," ").concat(l);r[s]=l+1;var p=n(u),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var f=i(A,o);o.byIndex=c,t.splice(c,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var r=o(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<r.length;a++){var c=n(r[a]);t[c].references--}for(var d=o(e,i),s=0;s<r.length;s++){var l=n(r[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var r=t[o]={id:o,exports:{}};return e[o](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{function e(e,t,n,o,i){return{title:e,description:t,dueDate:n,priority:o,notes:i}}var t=n(379),o=n.n(t),i=n(795),r=n.n(i),a=n(569),c=n.n(a),d=n(565),s=n.n(d),l=n(216),u=n.n(l),p=n(589),A=n.n(p),f=n(426),m={};function h(e){const t=document.getElementById("container");for(;t.firstChild;)t.removeChild(t.firstChild);const n=document.createElement("div");n.classList.add("projectHead");const o=document.createElement("h2");o.innerText="Project List",n.appendChild(o),t.appendChild(n),e.projectStorage.forEach((e=>{const n=document.createElement("div");n.classList.add("project"),n.setAttribute("data-title",e.title);const o=document.createElement("h3");o.innerText=e.title,n.appendChild(o);const i=document.createElement("button");i.setAttribute("id","expand"),i.innerText="View Project",n.appendChild(i);const r=document.createElement("button");r.setAttribute("id","deleteProjectBtn"),r.innerText="Delete Project",n.appendChild(r),t.appendChild(n)}))}m.styleTagTransform=A(),m.setAttributes=s(),m.insert=c().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=u(),o()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const E=e("wash dishes","wash the darn dishes","today","high","you can use the dishwasher"),C=e("eat protein","gotta get 100g of protein","today","high","protein from foods preferred"),b=function(e){const t=[];return{title:"mylist",list:t,addToDo:function(e){t.push(e),e.index=t.length-1},deleteToDo:function(e){t.splice(e.index,1)},editToDo:function(e){t.splice(e.index,1,e)}}}();b.addToDo(E),b.addToDo(C);const v=function(){const e=[];return{projectStorage:e,addList:function(t){e.push(t),t.index=e.length-1},deleteList:function(t){const n=e.findIndex((e=>e.title===t));e.splice(n,1)}}}();v.addList(b),console.log(v),h(v),document.getElementById("container").addEventListener("click",(e=>{if("BUTTON"===e.target.tagName){const t=e.target.id,n=e.target.parentNode.getAttribute("data-title");console.log(n),"expand"===t?function(e){const t=document.getElementById("container");for(;t.firstChild;)t.removeChild(t.firstChild);const n=document.createElement("div");n.classList.add("toDoHead");const o=document.createElement("button");o.innerText="back to Projects",o.setAttribute("id","backBtn"),n.appendChild(o);const i=document.createElement("h2");i.innerText=`Project: ${e.title}`,i.setAttribute("id","headingText"),n.appendChild(i),t.appendChild(n),document.createElement("div").classList.add("labelDiv"),e.list.forEach((e=>{const n=document.createElement("div");n.classList.add("listObject");const o=document.createElement("h3");o.innerText=e.title,n.appendChild(o);const i=document.createElement("p");i.innerText=e.description,n.appendChild(i);const r=document.createElement("p");r.innerText=e.dueDate,n.appendChild(r);const a=document.createElement("p");a.innerText=e.priority,n.appendChild(a);const c=document.createElement("p");c.innerText=e.dueDate,n.appendChild(c);const d=document.createElement("button");d.setAttribute("id","editBtn"),d.innerText="Edit",n.appendChild(d);const s=document.createElement("button");s.innerText="Delete",s.setAttribute("id","deleteToDoBtn"),n.appendChild(s),t.appendChild(n)}))}(v.projectStorage[b.index]):"backBtn"===t?h(v):"editBtn"===t||"deleteToDoBtn"===t||"deleteProjectBtn"===t&&window.confirm("Do you real want to delete this project?")&&(v.deleteList(n),h(v))}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,