(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var o=n(537),i=n.n(o),d=n(645),r=n.n(d)()(i());r.push([e.id,"html, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#container {\n  border: 2px solid black;\n  width: 75vw;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.project {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.toDoHead {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 3%;\n}\n\n.projectHead {\n  display: flex;\n  justify-content: center;\n}\n\n#headingText {\n  margin-left: 5%;\n}\n\n#backBtn {\n}\n\n.listObject {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.listObject > * {\n  max-width: 7%;\n}\n\n.listObject > button {\n  flex-grow: 2;\n}\n\n#container > :not(:first-child) {\n  margin-top: 1%;\n}\n\n.modal {\n  position: absolute;\n  width: 40vw;\n  background-color: white;\n  top: 20%;\n  border: 1px solid #ddd;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2%;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  backdrop-filter: blur(3px);\n  z-index: 1;\n}\n\n.modalHead {\n  display: flex;\n  width: 90%;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modalBody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#containerControls {\n  margin-top: 1%;\n  display: flex;\n  justify-items: flex-end;\n  width: 75vw;\n}\n\n.containerBtn {\n  margin-left: auto;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;EACvB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,2BAA2B;EAC3B,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,uBAAuB;EACvB,QAAQ;EACR,sBAAsB;EACtB,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,eAAe;EACf,MAAM;EACN,SAAS;EACT,OAAO;EACP,QAAQ;EACR,YAAY;EACZ,aAAa;EACb,2BAA2B;EAC3B,0BAA0B;EAC1B,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,UAAU;EACV,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,WAAW;AACb;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:["html, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#container {\n  border: 2px solid black;\n  width: 75vw;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.project {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.toDoHead {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  padding-left: 3%;\n}\n\n.projectHead {\n  display: flex;\n  justify-content: center;\n}\n\n#headingText {\n  margin-left: 5%;\n}\n\n#backBtn {\n}\n\n.listObject {\n  border: 2px solid black;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n.listObject > * {\n  max-width: 7%;\n}\n\n.listObject > button {\n  flex-grow: 2;\n}\n\n#container > :not(:first-child) {\n  margin-top: 1%;\n}\n\n.modal {\n  position: absolute;\n  width: 40vw;\n  background-color: white;\n  top: 20%;\n  border: 1px solid #ddd;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2%;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,0.5);\n  backdrop-filter: blur(3px);\n  z-index: 1;\n}\n\n.modalHead {\n  display: flex;\n  width: 90%;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modalBody {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#containerControls {\n  margin-top: 1%;\n  display: flex;\n  justify-items: flex-end;\n  width: 75vw;\n}\n\n.containerBtn {\n  margin-left: auto;\n}"],sourceRoot:""}]);const a=r},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,i,d){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(r[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&r[l[0]]||(void 0!==d&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=d),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),d="/*# ".concat(i," */");return[t].concat([d]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var d={},r=[],a=0;a<e.length;a++){var c=e[a],s=o.base?c[0]+o.base:c[0],l=d[s]||0,A="".concat(s," ").concat(l);d[s]=l+1;var u=n(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=i(p,o);o.byIndex=a,t.splice(a,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function i(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,i){var d=o(e=e||[],i=i||{});return function(e){e=e||[];for(var r=0;r<d.length;r++){var a=n(d[r]);t[a].references--}for(var c=o(e,i),s=0;s<d.length;s++){var l=n(d[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}d=c}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var d=n.sourceMap;d&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var d=t[o]={id:o,exports:{}};return e[o](d,d.exports,n),d.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{function e([e,t,n,o,i]){return{title:e,description:t,dueDate:n,priority:o,notes:i}}var t=n(379),o=n.n(t),i=n(795),d=n.n(i),r=n(569),a=n.n(r),c=n(565),s=n.n(c),l=n(216),A=n.n(l),u=n(589),p=n.n(u),m=n(426),f={};function h(e){const t=document.getElementById("container");for(t.setAttribute("data-list",e.title);t.firstChild;)t.removeChild(t.firstChild);const n=document.getElementsByClassName("containerBtn");n[0].setAttribute("id","newToDoBtn"),n[0].innerText="New To-Do";const o=document.createElement("div");o.classList.add("toDoHead");const i=document.createElement("button");i.innerText="back to Projects",i.setAttribute("id","backBtn"),o.appendChild(i);const d=document.createElement("h2");d.innerText=`Project: ${e.title}`,d.setAttribute("id","headingText"),o.appendChild(d),t.appendChild(o),e.list.forEach((e=>{const n=document.createElement("div");n.classList.add("listObject"),n.setAttribute("data-todo",e.title);const o=document.createElement("h3");o.innerText=`To-Do: ${e.title}`,n.appendChild(o);const i=document.createElement("p");i.innerText=`Description: ${e.description}`,n.appendChild(i);const d=document.createElement("p");d.innerText=`Due date: ${e.dueDate}`,n.appendChild(d);const r=document.createElement("p");r.innerText=`Priority: ${e.priority}`,n.appendChild(r);const a=document.createElement("p");a.innerText=`Notes: ${e.notes}`,n.appendChild(a);const c=document.createElement("button");c.setAttribute("id","editBtn"),c.innerText="Edit",n.appendChild(c);const s=document.createElement("button");s.innerText="Delete",s.setAttribute("id","deleteToDoBtn"),n.appendChild(s),t.appendChild(n)}))}function C(e){const t=document.getElementById("container");for(t.removeAttribute("data-list");t.firstChild;)t.removeChild(t.firstChild);const n=document.getElementsByClassName("containerBtn");n[0].setAttribute("id","newProjectBtn"),n[0].innerText="New Project";const o=document.createElement("div");o.classList.add("projectHead");const i=document.createElement("h2");i.innerText="Project List",o.appendChild(i),t.appendChild(o),e.projectStorage.forEach((e=>{const n=document.createElement("div");n.classList.add("project"),n.setAttribute("data-title",e.title);const o=document.createElement("h3");o.innerText=e.title,n.appendChild(o);const i=document.createElement("button");i.setAttribute("id","expand"),i.innerText="View Project",n.appendChild(i);const d=document.createElement("button");d.setAttribute("id","deleteProjectBtn"),d.innerText="Delete Project",n.appendChild(d),t.appendChild(n)}))}f.styleTagTransform=p(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=d(),f.insertStyleElement=A(),o()(m.Z,f),m.Z&&m.Z.locals&&m.Z.locals;const E=document.createElement("section");E.classList.add("modal","hidden");const b=document.createElement("div");function B(){for(;E.firstChild;)E.removeChild(E.firstChild);document.querySelector("body").removeChild(E),document.querySelector("body").removeChild(b)}function g(e,t){const n=document.createElement("label");n.setAttribute("for",t),n.textContent=e;const o=document.createElement("input");let i;return o.setAttribute("id",t),o.setAttribute("name",t),i="dueDate"===t?"date":"text",o.setAttribute("type",i),[n,o]}b.classList.add("overlay","hidden");const y=e(["wash dishes","wash the darn dishes","2023-02-16","high","you can use the dishwasher"]),x=e(["eat protein","gotta get 100g of protein","today","high","protein from foods preferred"]),v=function(e){const t=[];return{title:"mylist",list:t,addToDo:function(e){t.push(e),e.index=t.length-1},deleteToDo:function(e){t.splice(function(e){return t.findIndex((t=>t.title===e))}(e),1)},editToDo:function(e){t.splice(e.index,1,e)&&console.log("true")}}}();v.addToDo(y),v.addToDo(x);const T=function(){const e=[];function t(t){return e.findIndex((e=>e.title===t))}return{projectStorage:e,addList:function(t){e.push(t)},deleteList:function(n){e.splice(t(n),1)},getListIndex:t}}();T.addList(v),C(T);const j=document.getElementById("container");document.body.addEventListener("click",(t=>{if("BUTTON"!==t.target.tagName)return;const n=t.target;if(console.log(n.id),console.log(n.parentNode.className),"newProjectBtn"===n.id&&(console.log("its working"),function(){const e=document.createElement("div");e.classList.add("modalHead");const t=document.createElement("h2");t.innerText="New Project";const n=document.createElement("button");n.innerHTML="X",n.setAttribute("id","closeModal"),e.appendChild(t),e.appendChild(n);const o=document.createElement("div");o.classList.add("modalBody");const i=document.createElement("p");i.innerText="This is a test",o.appendChild(i);const[d,r]=g("Title","title");o.appendChild(d),o.appendChild(r);const a=document.createElement("button");a.innerText="Submit",a.setAttribute("id","submitToDoBtn"),E.appendChild(e),E.appendChild(o),E.appendChild(a),document.querySelector("body").appendChild(E),document.querySelector("body").appendChild(b),n.addEventListener("click",(e=>{"closeModal"===e.target.id&&B()}))}()),"project"===n.parentNode.className){const e=n.parentNode.getAttribute("data-title");if(-1===T.getListIndex(e))return;if("expand"===n.id){const t=T.getListIndex(e);h(T.projectStorage[t])}else"deleteProjectBtn"===n.id&&window.confirm("Do you real want to delete this project?")&&(T.deleteList(e),C(T))}else if("backBtn"===n.id)C(T);else if("editBtn"===n.id)!function(){const e=document.createElement("div");e.classList.add("modalHead");const t=document.createElement("h2");t.innerText="Edit To-Do";const n=document.createElement("button");n.innerHTML="X",n.setAttribute("id","closeModal"),e.appendChild(t),e.appendChild(n);const o=document.createElement("div");o.classList.add("modalBody");const i=document.createElement("p");i.innerText="This is a test",o.appendChild(i);const[d,r]=g("Title","title");o.appendChild(d),o.appendChild(r);const[a,c]=g("Description","description");o.appendChild(a),o.appendChild(c);const[s,l]=g("Due Date","dueDate");o.appendChild(s),o.appendChild(l);const[A,u]=g("Priority","priority");o.appendChild(A),o.appendChild(u);const[p,m]=g("Notes","notes");o.appendChild(p),o.appendChild(m);const f=document.createElement("button");f.innerText="Submit",f.setAttribute("id","submitToDoBtn"),E.appendChild(e),E.appendChild(o),E.appendChild(f),document.querySelector("body").appendChild(E),document.querySelector("body").appendChild(b),n.addEventListener("click",(e=>{"closeModal"===e.target.id&&B()}))}(),function(e){Object.entries(e).forEach((([e,t])=>{"index"!==e&&document.getElementById(e).setAttribute("value",`${t}`)}))}(y);else if("submitToDoBtn"===n.id){const t=e(function(){const e=[],t=E.getElementsByTagName("input");for(let n=0;n<t.length;n+=1)e.push(t[n].value);return e}());console.log(t),v.editToDo(t),B();const n=T.getListIndex(j.getAttribute("data-list"));h(T.projectStorage[n])}else if("deleteToDoBtn"===n.id&&window.confirm("Do you real want to delete this To-Do?")){const e=n.parentNode.getAttribute("data-todo"),t=j.getAttribute("data-list");T.projectStorage[T.getListIndex(t)].deleteToDo(e),h(T.projectStorage[T.getListIndex(t)])}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,